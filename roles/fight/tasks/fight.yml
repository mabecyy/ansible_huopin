---
- name: create huopin dir
  file: path={{huoping_dir}} state=directory backup=yes recurse=yes
- name: create scripts dir
  file: path={{scripts_dir}} state=directory backup=yes recurse=yes
- name: create fight dir
  file: path={{fight_dir}} state=directory backup=yes recurse=yes
- name: check fight daemon
  shell: "ps aux | grep '{{fight_dir}}'  |grep -v grep | wc -l"
  register: daemon
- name: copy fight data
  copy: src=rakserver/ dest={{fight_dir}}/rakserver{{item}} backup=yes mode=755
  with_sequence: count={{num}}
  when: daemon.stdout == '0'
- name: copy fight data config 
  copy: src=rakserver/game/global_define.lua  dest={{fight_dir}}/rakserver{{item}}/game backup=yes mode=755
  with_sequence: count={{num}}
  when: daemon.stdout == '0'
- name: copy  modify_rak_global_define.sh to /data/scripts
  template: src="modify_rak_global_define.sh"  dest={{scripts_dir}} backup=yes mode=755
  when: daemon.stdout == '0'
- name: modify rakserver global_define.lua 
  shell: "{{scripts_dir}}/modify_rak_global_define.sh"
  when: daemon.stdout == '0'
- name: copy libboost package to /usr/local
  copy: src={{item}} dest=/usr/local/lib backup=yes mode=755
  with_items:
    - libboost_thread.so.1.58.0
    - libboost_system.so.1.58.0
- name: copy libtcmall package to /usr/local
  copy: src=libtcmalloc.so.4 dest=/usr/lib/ backup=yes mode=755

- name: ldconfig config
  shell: "/sbin/ldconfig"

- name: copy fight server scripts 
  template: src={{item}}.sh  dest={{scripts_dir}}/{{item}}{{fight_node_id}}.sh backup=yes mode=755
  with_items:
    - start_fight_server
    - stop_fight_server

- name: copy fight server scripts to {{fight_dir}}
  template: src={{item}}.sh  dest={{fight_dir}} backup=yes mode=755
  with_items:
    - startall
    - stopall
- name: copy rakserver  to backup dir
  copy:  src=backup/rakserver dest={{fight_dir}}/backup backup=yes mode=755

- name: copy fight setting.py to backup dir
  template: src=setting.py  dest={{fight_dir}}/backup backup=yes

